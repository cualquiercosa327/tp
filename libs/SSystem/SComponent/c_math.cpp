/* c_math.cpp autogenerated by split.py v0.3 at 2020-12-31 13:20:59.345670 */

#include "SComponent/c_math.h"
#include "clib.h"

extern "C" {
double func_8036C760(double, double);
void cM_atan2s__Fff(void);
void U_GetAtanTable__Fff(void);
}

static const double lbl_804550A8 = 6.2831854820251465;
static const float lbl_804550B0 = 10430.378;
static const float lbl_804550B4 = 1024.0f;                                                 // 0x44800000
static const float lbl_804550B8 = 0.0f;
static const float lbl_804550BC = 9.58738E-5f;
static const float lbl_804550C8 = 30323.0f;                                                // 0x46ece600
static const float lbl_804550CC = 30269.0f;                                                // 0x46ec7a00
static const float lbl_804550D0 = 30307.0f;                                                // 0x46ecc600
static const double lbl_804550D8 = 1.0;                                                    // 0x3ff0000000000000
static const float lbl_804550E0 = 2.0f;                                                    // 0x40000000
static const float lbl_804550E4 = 0.5f;                                                    // 0x3f000000

extern s32 lbl_80451168;  // SComponent::r0
extern s32 lbl_8045116C;  // SComponent::r1
extern s32 lbl_80451170;  // SComponent::r2
extern s32 lbl_80451174;  // SComponent::r02
extern s32 lbl_80451178;  // SComponent::r12
extern s32 lbl_8045117C;  // SComponent::r22

extern u16 lbl_803C3778[1028];  // SComponent::atntable

// cM_rad2s__Ff
#ifdef NM
s16 cM_rad2s(float f0){
    return (s16)(FLOAT_LABEL(lbl_804550B0) * (f32)func_8036C760(f0, DOUBLE_LABEL(lbl_804550A8)));
}
#else
asm s16 cM_rad2s(float){nofralloc
#include "SComponent/c_math/asm/func_802675E4.s"
}
#endif

// U_GetAtanTable__Fff
u16 U_GetAtanTable(float f0, float f1) {
    return lbl_803C3778[(int)(f0 / f1 * FLOAT_LABEL(lbl_804550B4))];
}

// cM_atan2s__Fff
asm s16 cM_atan2s(float, float) {
    nofralloc
#include "SComponent/c_math/asm/func_80267674.s"
}

// cM_atan2f__Fff
float cM_atan2f(float f1, float f2) {
    return lbl_804550BC * cM_atan2s(f1, f2);
}

// cM_initRnd__Fiii
void cM_initRnd(int p0, int p1, int p2) {
    lbl_80451168 = p0;
    lbl_8045116C = p1;
    lbl_80451170 = p2;
}

// cM_rnd__Fv
float cM_rnd(void) {
    lbl_80451168 = (lbl_80451168 * 0xAB) % 0x763D;
    lbl_8045116C = (lbl_8045116C * 0xAC) % 0x7663;
    lbl_80451170 = (lbl_80451170 * 0xAA) % 0x7673;
    return fabsf(fmodf(lbl_80451168 / lbl_804550CC + lbl_8045116C / lbl_804550D0 +
                                          lbl_80451170 / lbl_804550C8,
                                      lbl_804550D8));
}

// cM_rndF__Ff
float cM_rndF(float f) {
    return cM_rnd() * f;
}

// cM_rndFX__Ff
float cM_rndFX(float f) {
    return f * (cM_rnd() - FLOAT_LABEL(lbl_804550E4)) * FLOAT_LABEL(lbl_804550E0);
}

// cM_initRnd2__Fiii
void cM_initRnd2(int p0, int p1, int p2) {
    lbl_80451174 = p0;
    lbl_80451178 = p1;
    lbl_8045117C = p2;
}

// cM_rnd2__Fv
float cM_rnd2(void) {
    lbl_80451174 = (lbl_80451174 * 0xAB) % 0x763D;
    lbl_80451178 = (lbl_80451178 * 0xAC) % 0x7663;
    lbl_8045117C = (lbl_8045117C * 0xAA) % 0x7673;
    return fabsf(fmodf(lbl_80451174 / lbl_804550CC + lbl_80451178 / lbl_804550D0 +
                                          lbl_8045117C / lbl_804550C8,
                                      lbl_804550D8));
}

// cM_rndF2__Ff
float cM_rndF2(float f) {
    return cM_rnd2() * f;
}

// cM_rndFX2__Ff
float cM_rndFX2(float f) {
    return f * (cM_rnd2() - FLOAT_LABEL(lbl_804550E4)) * FLOAT_LABEL(lbl_804550E0);
}
