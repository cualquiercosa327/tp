/* f_op_overlap_mng.cpp autogenerated by split.py v0.4 at 2021-02-13 20:35:13.072583 */

#include "f/f_op/f_op_overlap_mng.h"
#include "SComponent/c_request.h"
#include "global.h"

// additional symbols needed for f_op_overlap_mng.cpp
// autogenerated by split.py v0.4 at 2021-02-13 20:35:13.072614
extern "C" {
// void cReq_Done__FP18request_base_class(void);
void cReq_Is_Done__FP18request_base_class(void);
void fopOvlpM_Cancel(void);
void fopOvlpM_ClearOfReq(void);
void fopOvlpM_Done(void);
void fopOvlpM_Init(void);
void fopOvlpM_IsDoingReq(void);
void fopOvlpM_Request(void);
void fopOvlpM_SceneIsStart(void);
void fopOvlpM_SceneIsStop(void);
void fopOvlpM_ToldAboutID(void);
void fopOvlpReq_Cancel(void);
void fopOvlpReq_Handler(void);
void fopOvlpReq_OverlapClr(void);
void fopOvlpReq_Request(void);
void fopScnPause_Disable(void);
void fopScnPause_Enable(void);
void fpcEx_SearchByID(void);
}

// additional symbols needed for f_op_overlap_mng.cpp
// autogenerated by split.py v0.4 at 2021-02-13 20:35:13.072619
extern u8 lbl_803F1DE8;
extern request_base_class* l_fopOvlpM_overlap;

extern "C" {
// fopOvlpM_SceneIsStop__Fv
// fopOvlpM_SceneIsStop(void)
asm void fopOvlpM_SceneIsStop(void) {
    nofralloc
#include "f/f_op_overlap_mng/asm/func_8001E484.s"
}

// fopOvlpM_SceneIsStart__Fv
// fopOvlpM_SceneIsStart(void)
asm void fopOvlpM_SceneIsStart(void) {
    nofralloc
#include "f/f_op_overlap_mng/asm/func_8001E4C4.s"
}
};

// 1 instruction off
#ifdef NONMATCHING
BOOL fopOvlpM_IsOutReq(overlap_task_class* pTaskClass) {
    return pTaskClass->field_0xc4 == 2;
}
#else
asm BOOL fopOvlpM_IsOutReq(overlap_task_class* pTaskClass) {
    nofralloc
#include "f/f_op_overlap_mng/asm/func_8001E504.s"
}
#endif

void fopOvlpM_Done(overlap_task_class* pTaskClass) {
    cReq_Done((request_base_class*)&pTaskClass->field_0xc4);
}

void fopOvlpM_ToldAboutID(unsigned int param_1) {
    l_fopOvlpM_overlap ? l_fopOvlpM_overlap->field_0x20[0x32] = param_1 : 0;
}

u32 fopOvlpM_IsPeek(void) {
    return l_fopOvlpM_overlap ? l_fopOvlpM_overlap->field_0x8 : 0;
}

int fopOvlpM_IsDone(void) {
    return l_fopOvlpM_overlap ? cReq_Is_Done(l_fopOvlpM_overlap) : 0;
}
extern "C" {
// fopOvlpM_IsDoingReq__Fv
// fopOvlpM_IsDoingReq(void)
asm void fopOvlpM_IsDoingReq(void) {
    nofralloc
#include "f/f_op_overlap_mng/asm/func_8001E5A8.s"
}

// fopOvlpM_ClearOfReq__Fv
// fopOvlpM_ClearOfReq(void)
asm void fopOvlpM_ClearOfReq(void) {
    nofralloc
#include "f/f_op_overlap_mng/asm/func_8001E5D0.s"
}

// fopOvlpM_Request__FsUs
// fopOvlpM_Request(s16, u16)
asm void fopOvlpM_Request(void) {
    nofralloc
#include "f/f_op_overlap_mng/asm/func_8001E604.s"
}

// fopOvlpM_Management__Fv
// fopOvlpM_Management(void)
asm void fopOvlpM_Management(void) {
    nofralloc
#include "f/f_op_overlap_mng/asm/func_8001E650.s"
}

// fopOvlpM_Cancel__Fv
// fopOvlpM_Cancel(void)
asm void fopOvlpM_Cancel(void) {
    nofralloc
#include "f/f_op_overlap_mng/asm/func_8001E698.s"
}

// fopOvlpM_Init__Fv
// fopOvlpM_Init(void)
asm void fopOvlpM_Init(void) {
    nofralloc
#include "f/f_op_overlap_mng/asm/func_8001E6E8.s"
}
};
